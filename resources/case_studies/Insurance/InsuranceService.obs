import "resources/case_studies/Insurance/Insurer.obs"

main resource contract InsuranceService {
    // TODO: Collection of Insurer, Token
    // TODO: Keys of trusted banks
    Insurer@Shared insurer;
    Token@Owned tokens;

    InsuranceService@Owned() {}


    transaction addInsurer(Insurer@Shared ins) {
        insurer = ins;
    }

    // TODO: information to calculate bids, Collection of Bid and Token
    transaction requestBids(int i) returns Bid@Available {
        BidTokenPair@Shared bidAndTokens = insurer.requestBids(i);

        // TODO: add Tokens from bidAndTokens to Tokens
        // TODO: how to keep track of tokens for each client?
        tokens = bidAndTokens.getToken();
        Bid@Available bid = bidAndTokens.getBid();

        return bid;
    }

    transaction buyBid(Bid@Available >> Unowned bid, Token@Owned >> Unowned token) returns Bid@Sold {

        if (bid.hasExpired()) {
            insurer.returnToken(token);
            bid.expire();
            disown bid;
            throw;
        } else {
            // TODO: collect all tokens together (ones given by insurer and insuree) (for now just disown)
            disown token;
            bid.buy();
            return bid;
        }
    }

}


