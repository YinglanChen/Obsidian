import "resources/case_studies/Insurance/Policy.obs"
import "resources/case_studies/Insurance/Money.obs"


main contract PolicyRecord {
    Policy@Unowned policy;

    asset state Pending {
        Money@Owned payout;
    }

    asset state Active {
        Money@Owned claim;
    }

    state Expired {}

    PolicyRecord@Pending(Policy@Unowned p, Money@Owned m) {
        policy = p;
        Pending::payout = m;
        ->Pending;
    }

    transaction getPolicy(PolicyRecord this) returns Policy@Unowned {
        return policy;
    }

    transaction refund(PolicyRecord@Pending >> Expired this) returns Money@Owned{
         Money refund = payout;
         ->Expired;
         return refund;
    }

    transaction activate(PolicyRecord@Pending >> Active this, Money@Owned >> Unowned policyCost) {
         payout.addMoney(policyCost);
         Active::claim = payout;
         ->Active;
    }

}