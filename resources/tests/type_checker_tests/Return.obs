unique contract C_Unique {
  C_Unique() {
    ->S;
  }
  state S {}
}

contract C {
    transaction t_no_ret() {
        return 3;
        return;
    }

    transaction t_has_ret() returns int {
        return 5;
        return;
    }

    transaction t_ret_nonprimitive() returns C_Unique {
        return new C_Unique();
        C_Unique.S cs = new C_Unique();
        return;
        return 5;
        return cs;
    }

    transaction no_return() returns int {
        int x = 5;
    }

    transaction branching_return(bool b) returns int {
        if (b) {
            return 2;
        } else {
            return 3;
        }
        int x = 2;
    }

    transaction branching_return2(bool b) returns int {
        if (b) {
            return 2;
        } else {
            int x = 3;
        }
        int y = 3;
    }

}